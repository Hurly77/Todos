
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."categories" (
    "id" bigint NOT NULL,
    "red" boolean DEFAULT false NOT NULL,
    "green" boolean DEFAULT false,
    "blue" boolean DEFAULT false,
    "yellow" boolean DEFAULT false,
    "orange" boolean DEFAULT false,
    "purple" boolean DEFAULT false
);

ALTER TABLE "public"."categories" OWNER TO "postgres";

ALTER TABLE "public"."categories" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."categories_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."task_repeat" (
    "id" bigint NOT NULL,
    "task_id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."task_repeat" OWNER TO "postgres";

ALTER TABLE "public"."task_repeat" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."task_repeat_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."task_steps" (
    "id" bigint NOT NULL,
    "task_id" bigint,
    "title" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."task_steps" OWNER TO "postgres";

ALTER TABLE "public"."task_steps" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."task_steps_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."tasks" (
    "id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "categories_id" bigint,
    "title" character varying,
    "date" timestamp with time zone,
    "reminder" timestamp with time zone,
    "important" boolean DEFAULT false,
    "completed" boolean DEFAULT false,
    "notes" character varying,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"()
);

ALTER TABLE "public"."tasks" OWNER TO "postgres";

ALTER TABLE "public"."tasks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."tasks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."test_data" (
    "id" bigint NOT NULL,
    "name" "text" DEFAULT ''::"text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."test_data" OWNER TO "postgres";

ALTER TABLE "public"."test_data" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."test_data_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."categories"
    ADD CONSTRAINT "categories_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."task_repeat"
    ADD CONSTRAINT "task_repeat_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."task_repeat"
    ADD CONSTRAINT "task_repeat_task_id_key" UNIQUE ("task_id");

ALTER TABLE ONLY "public"."task_steps"
    ADD CONSTRAINT "task_steps_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "tasks_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."test_data"
    ADD CONSTRAINT "test_data_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."task_repeat"
    ADD CONSTRAINT "task_repeat_task_id_fkey" FOREIGN KEY ("task_id") REFERENCES "public"."tasks"("id");

ALTER TABLE ONLY "public"."task_steps"
    ADD CONSTRAINT "task_steps_task_id_fkey" FOREIGN KEY ("task_id") REFERENCES "public"."tasks"("id");

ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "tasks_categories_id_fkey" FOREIGN KEY ("categories_id") REFERENCES "public"."categories"("id");

ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "tasks_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");

CREATE POLICY "Enable all for all users" ON "public"."test_data" USING (true);

CREATE POLICY "Enable insert for users based on user_id" ON "public"."tasks" FOR INSERT WITH CHECK (true);

CREATE POLICY "Enable read access for all users" ON "public"."categories" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."task_repeat" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."task_steps" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."tasks" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."test_data" USING (true);

ALTER TABLE "public"."categories" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."task_repeat" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."task_steps" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."tasks" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."test_data" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."categories" TO "anon";
GRANT ALL ON TABLE "public"."categories" TO "authenticated";
GRANT ALL ON TABLE "public"."categories" TO "service_role";

GRANT ALL ON SEQUENCE "public"."categories_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."categories_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."categories_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."task_repeat" TO "anon";
GRANT ALL ON TABLE "public"."task_repeat" TO "authenticated";
GRANT ALL ON TABLE "public"."task_repeat" TO "service_role";

GRANT ALL ON SEQUENCE "public"."task_repeat_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."task_repeat_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."task_repeat_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."task_steps" TO "anon";
GRANT ALL ON TABLE "public"."task_steps" TO "authenticated";
GRANT ALL ON TABLE "public"."task_steps" TO "service_role";

GRANT ALL ON SEQUENCE "public"."task_steps_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."task_steps_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."task_steps_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."tasks" TO "anon";
GRANT ALL ON TABLE "public"."tasks" TO "authenticated";
GRANT ALL ON TABLE "public"."tasks" TO "service_role";

GRANT ALL ON SEQUENCE "public"."tasks_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."tasks_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."tasks_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."test_data" TO "anon";
GRANT ALL ON TABLE "public"."test_data" TO "authenticated";
GRANT ALL ON TABLE "public"."test_data" TO "service_role";

GRANT ALL ON SEQUENCE "public"."test_data_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."test_data_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."test_data_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
